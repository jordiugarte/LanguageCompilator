/*
 * generated by Xtext 2.21.0
 */
grammar InternalPerronix;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package edu.upb.lp.isc.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.upb.lp.isc.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.upb.lp.isc.services.PerronixGrammarAccess;

}
@parser::members {
	private PerronixGrammarAccess grammarAccess;

	public void setGrammarAccess(PerronixGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMyRacketProgram
entryRuleMyRacketProgram
:
{ before(grammarAccess.getMyRacketProgramRule()); }
	 ruleMyRacketProgram
{ after(grammarAccess.getMyRacketProgramRule()); } 
	 EOF 
;

// Rule MyRacketProgram
ruleMyRacketProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMyRacketProgramAccess().getGroup()); }
		(rule__MyRacketProgram__Group__0)
		{ after(grammarAccess.getMyRacketProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefine
entryRuleDefine
:
{ before(grammarAccess.getDefineRule()); }
	 ruleDefine
{ after(grammarAccess.getDefineRule()); } 
	 EOF 
;

// Rule Define
ruleDefine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefineAccess().getGroup()); }
		(rule__Define__Group__0)
		{ after(grammarAccess.getDefineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleExpression
entryRuleSimpleExpression
:
{ before(grammarAccess.getSimpleExpressionRule()); }
	 ruleSimpleExpression
{ after(grammarAccess.getSimpleExpressionRule()); } 
	 EOF 
;

// Rule SimpleExpression
ruleSimpleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleExpressionAccess().getIntExpressionParserRuleCall()); }
		ruleIntExpression
		{ after(grammarAccess.getSimpleExpressionAccess().getIntExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrintExpression
entryRulePrintExpression
:
{ before(grammarAccess.getPrintExpressionRule()); }
	 rulePrintExpression
{ after(grammarAccess.getPrintExpressionRule()); } 
	 EOF 
;

// Rule PrintExpression
rulePrintExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrintExpressionAccess().getAlternatives()); }
		(rule__PrintExpression__Alternatives)
		{ after(grammarAccess.getPrintExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntExpression
entryRuleIntExpression
:
{ before(grammarAccess.getIntExpressionRule()); }
	 ruleIntExpression
{ after(grammarAccess.getIntExpressionRule()); } 
	 EOF 
;

// Rule IntExpression
ruleIntExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntExpressionAccess().getValueAssignment()); }
		(rule__IntExpression__ValueAssignment)
		{ after(grammarAccess.getIntExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoubleExpression
entryRuleDoubleExpression
:
{ before(grammarAccess.getDoubleExpressionRule()); }
	 ruleDoubleExpression
{ after(grammarAccess.getDoubleExpressionRule()); } 
	 EOF 
;

// Rule DoubleExpression
ruleDoubleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoubleExpressionAccess().getGroup()); }
		(rule__DoubleExpression__Group__0)
		{ after(grammarAccess.getDoubleExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringExpression
entryRuleStringExpression
:
{ before(grammarAccess.getStringExpressionRule()); }
	 ruleStringExpression
{ after(grammarAccess.getStringExpressionRule()); } 
	 EOF 
;

// Rule StringExpression
ruleStringExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringExpressionAccess().getValueAssignment()); }
		(rule__StringExpression__ValueAssignment)
		{ after(grammarAccess.getStringExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithExpression
entryRuleArithExpression
:
{ before(grammarAccess.getArithExpressionRule()); }
	 ruleArithExpression
{ after(grammarAccess.getArithExpressionRule()); } 
	 EOF 
;

// Rule ArithExpression
ruleArithExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithExpressionAccess().getGroup()); }
		(rule__ArithExpression__Group__0)
		{ after(grammarAccess.getArithExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfExpression
entryRuleIfExpression
:
{ before(grammarAccess.getIfExpressionRule()); }
	 ruleIfExpression
{ after(grammarAccess.getIfExpressionRule()); } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfExpressionAccess().getGroup()); }
		(rule__IfExpression__Group__0)
		{ after(grammarAccess.getIfExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCallExpression
entryRuleFunctionCallExpression
:
{ before(grammarAccess.getFunctionCallExpressionRule()); }
	 ruleFunctionCallExpression
{ after(grammarAccess.getFunctionCallExpressionRule()); } 
	 EOF 
;

// Rule FunctionCallExpression
ruleFunctionCallExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallExpressionAccess().getGroup()); }
		(rule__FunctionCallExpression__Group__0)
		{ after(grammarAccess.getFunctionCallExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListInt
entryRuleListInt
:
{ before(grammarAccess.getListIntRule()); }
	 ruleListInt
{ after(grammarAccess.getListIntRule()); } 
	 EOF 
;

// Rule ListInt
ruleListInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListIntAccess().getGroup()); }
		(rule__ListInt__Group__0)
		{ after(grammarAccess.getListIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListDouble
entryRuleListDouble
:
{ before(grammarAccess.getListDoubleRule()); }
	 ruleListDouble
{ after(grammarAccess.getListDoubleRule()); } 
	 EOF 
;

// Rule ListDouble
ruleListDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListDoubleAccess().getGroup()); }
		(rule__ListDouble__Group__0)
		{ after(grammarAccess.getListDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListString
entryRuleListString
:
{ before(grammarAccess.getListStringRule()); }
	 ruleListString
{ after(grammarAccess.getListStringRule()); } 
	 EOF 
;

// Rule ListString
ruleListString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListStringAccess().getGroup()); }
		(rule__ListString__Group__0)
		{ after(grammarAccess.getListStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLengthList
entryRuleLengthList
:
{ before(grammarAccess.getLengthListRule()); }
	 ruleLengthList
{ after(grammarAccess.getLengthListRule()); } 
	 EOF 
;

// Rule LengthList
ruleLengthList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLengthListAccess().getGroup()); }
		(rule__LengthList__Group__0)
		{ after(grammarAccess.getLengthListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListTail
entryRuleListTail
:
{ before(grammarAccess.getListTailRule()); }
	 ruleListTail
{ after(grammarAccess.getListTailRule()); } 
	 EOF 
;

// Rule ListTail
ruleListTail 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListTailAccess().getGroup()); }
		(rule__ListTail__Group__0)
		{ after(grammarAccess.getListTailAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileLoop
entryRuleWhileLoop
:
{ before(grammarAccess.getWhileLoopRule()); }
	 ruleWhileLoop
{ after(grammarAccess.getWhileLoopRule()); } 
	 EOF 
;

// Rule WhileLoop
ruleWhileLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileLoopAccess().getGroup()); }
		(rule__WhileLoop__Group__0)
		{ after(grammarAccess.getWhileLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getSimpleExpressionParserRuleCall_0()); }
		ruleSimpleExpression
		{ after(grammarAccess.getExpressionAccess().getSimpleExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getArithExpressionParserRuleCall_1()); }
		ruleArithExpression
		{ after(grammarAccess.getExpressionAccess().getArithExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_2()); }
		ruleIfExpression
		{ after(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getFunctionCallExpressionParserRuleCall_3()); }
		ruleFunctionCallExpression
		{ after(grammarAccess.getExpressionAccess().getFunctionCallExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getListIntParserRuleCall_4()); }
		ruleListInt
		{ after(grammarAccess.getExpressionAccess().getListIntParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getListDoubleParserRuleCall_5()); }
		ruleListDouble
		{ after(grammarAccess.getExpressionAccess().getListDoubleParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getListStringParserRuleCall_6()); }
		ruleListString
		{ after(grammarAccess.getExpressionAccess().getListStringParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getPrintExpressionParserRuleCall_7()); }
		rulePrintExpression
		{ after(grammarAccess.getExpressionAccess().getPrintExpressionParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getLengthListParserRuleCall_8()); }
		ruleLengthList
		{ after(grammarAccess.getExpressionAccess().getLengthListParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getListTailParserRuleCall_9()); }
		ruleListTail
		{ after(grammarAccess.getExpressionAccess().getListTailParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getWhileLoopParserRuleCall_10()); }
		ruleWhileLoop
		{ after(grammarAccess.getExpressionAccess().getWhileLoopParserRuleCall_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrintExpressionAccess().getGroup_0()); }
		(rule__PrintExpression__Group_0__0)
		{ after(grammarAccess.getPrintExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrintExpressionAccess().getDoubleExpressionParserRuleCall_1()); }
		ruleDoubleExpression
		{ after(grammarAccess.getPrintExpressionAccess().getDoubleExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrintExpressionAccess().getGroup_2()); }
		(rule__PrintExpression__Group_2__0)
		{ after(grammarAccess.getPrintExpressionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExpression__OpAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithExpressionAccess().getOpPlusSignKeyword_1_0_0()); }
		'+'
		{ after(grammarAccess.getArithExpressionAccess().getOpPlusSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArithExpressionAccess().getOpHyphenMinusKeyword_1_0_1()); }
		'-'
		{ after(grammarAccess.getArithExpressionAccess().getOpHyphenMinusKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getArithExpressionAccess().getOpAsteriskKeyword_1_0_2()); }
		'*'
		{ after(grammarAccess.getArithExpressionAccess().getOpAsteriskKeyword_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getArithExpressionAccess().getOpSolidusKeyword_1_0_3()); }
		'/'
		{ after(grammarAccess.getArithExpressionAccess().getOpSolidusKeyword_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyRacketProgram__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MyRacketProgram__Group__0__Impl
	rule__MyRacketProgram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MyRacketProgram__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMyRacketProgramAccess().getGroup_0()); }
	(rule__MyRacketProgram__Group_0__0)?
	{ after(grammarAccess.getMyRacketProgramAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyRacketProgram__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MyRacketProgram__Group__1__Impl
	rule__MyRacketProgram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MyRacketProgram__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMyRacketProgramAccess().getExecutionsKeyword_1()); }
	'Executions'
	{ after(grammarAccess.getMyRacketProgramAccess().getExecutionsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyRacketProgram__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MyRacketProgram__Group__2__Impl
	rule__MyRacketProgram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MyRacketProgram__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMyRacketProgramAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getMyRacketProgramAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyRacketProgram__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MyRacketProgram__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MyRacketProgram__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMyRacketProgramAccess().getExecutionsAssignment_3()); }
		(rule__MyRacketProgram__ExecutionsAssignment_3)
		{ after(grammarAccess.getMyRacketProgramAccess().getExecutionsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getMyRacketProgramAccess().getExecutionsAssignment_3()); }
		(rule__MyRacketProgram__ExecutionsAssignment_3)*
		{ after(grammarAccess.getMyRacketProgramAccess().getExecutionsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MyRacketProgram__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MyRacketProgram__Group_0__0__Impl
	rule__MyRacketProgram__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MyRacketProgram__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMyRacketProgramAccess().getDefinitionsKeyword_0_0()); }
	'Definitions'
	{ after(grammarAccess.getMyRacketProgramAccess().getDefinitionsKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyRacketProgram__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MyRacketProgram__Group_0__1__Impl
	rule__MyRacketProgram__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MyRacketProgram__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMyRacketProgramAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getMyRacketProgramAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyRacketProgram__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MyRacketProgram__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MyRacketProgram__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMyRacketProgramAccess().getDefinesAssignment_0_2()); }
		(rule__MyRacketProgram__DefinesAssignment_0_2)
		{ after(grammarAccess.getMyRacketProgramAccess().getDefinesAssignment_0_2()); }
	)
	(
		{ before(grammarAccess.getMyRacketProgramAccess().getDefinesAssignment_0_2()); }
		(rule__MyRacketProgram__DefinesAssignment_0_2)*
		{ after(grammarAccess.getMyRacketProgramAccess().getDefinesAssignment_0_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Define__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Define__Group__0__Impl
	rule__Define__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getDefineAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Define__Group__1__Impl
	rule__Define__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineAccess().getDefineKeyword_1()); }
	'define'
	{ after(grammarAccess.getDefineAccess().getDefineKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Define__Group__2__Impl
	rule__Define__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getDefineAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Define__Group__3__Impl
	rule__Define__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineAccess().getNameAssignment_3()); }
	(rule__Define__NameAssignment_3)
	{ after(grammarAccess.getDefineAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Define__Group__4__Impl
	rule__Define__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineAccess().getParamsAssignment_4()); }
	(rule__Define__ParamsAssignment_4)*
	{ after(grammarAccess.getDefineAccess().getParamsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Define__Group__5__Impl
	rule__Define__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getDefineAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Define__Group__6__Impl
	rule__Define__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineAccess().getBodyAssignment_6()); }
	(rule__Define__BodyAssignment_6)
	{ after(grammarAccess.getDefineAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Define__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getDefineAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrintExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintExpression__Group_0__0__Impl
	rule__PrintExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintExpressionAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrintExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintExpression__Group_0__1__Impl
	rule__PrintExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintExpressionAccess().getPrintKeyword_0_1()); }
	'print'
	{ after(grammarAccess.getPrintExpressionAccess().getPrintKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintExpressionAccess().getValueAssignment_0_2()); }
	(rule__PrintExpression__ValueAssignment_0_2)
	{ after(grammarAccess.getPrintExpressionAccess().getValueAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrintExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintExpression__Group_2__0__Impl
	rule__PrintExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintExpressionAccess().getSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING
	{ after(grammarAccess.getPrintExpressionAccess().getSTRINGTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintExpressionAccess().getRightParenthesisKeyword_2_1()); }
	')'
	{ after(grammarAccess.getPrintExpressionAccess().getRightParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoubleExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoubleExpression__Group__0__Impl
	rule__DoubleExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleExpressionAccess().getValueAssignment_0()); }
	(rule__DoubleExpression__ValueAssignment_0)
	{ after(grammarAccess.getDoubleExpressionAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoubleExpression__Group__1__Impl
	rule__DoubleExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleExpressionAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getDoubleExpressionAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoubleExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDoubleExpressionAccess().getINTTerminalRuleCall_2()); }
		(RULE_INT)
		{ after(grammarAccess.getDoubleExpressionAccess().getINTTerminalRuleCall_2()); }
	)
	(
		{ before(grammarAccess.getDoubleExpressionAccess().getINTTerminalRuleCall_2()); }
		(RULE_INT)*
		{ after(grammarAccess.getDoubleExpressionAccess().getINTTerminalRuleCall_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithExpression__Group__0__Impl
	rule__ArithExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getArithExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithExpression__Group__1__Impl
	rule__ArithExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithExpressionAccess().getOpAssignment_1()); }
	(rule__ArithExpression__OpAssignment_1)
	{ after(grammarAccess.getArithExpressionAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithExpression__Group__2__Impl
	rule__ArithExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithExpressionAccess().getArgsAssignment_2()); }
	(rule__ArithExpression__ArgsAssignment_2)
	{ after(grammarAccess.getArithExpressionAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithExpression__Group__3__Impl
	rule__ArithExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getArithExpressionAccess().getArgsAssignment_3()); }
		(rule__ArithExpression__ArgsAssignment_3)
		{ after(grammarAccess.getArithExpressionAccess().getArgsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getArithExpressionAccess().getArgsAssignment_3()); }
		(rule__ArithExpression__ArgsAssignment_3)*
		{ after(grammarAccess.getArithExpressionAccess().getArgsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getArithExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__0__Impl
	rule__IfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__1__Impl
	rule__IfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__2__Impl
	rule__IfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__3__Impl
	rule__IfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getCondAssignment_3()); }
	(rule__IfExpression__CondAssignment_3)
	{ after(grammarAccess.getIfExpressionAccess().getCondAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__4__Impl
	rule__IfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__5__Impl
	rule__IfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getThenAssignment_5()); }
	(rule__IfExpression__ThenAssignment_5)
	{ after(grammarAccess.getIfExpressionAccess().getThenAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__6__Impl
	rule__IfExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseAssignment_6()); }
	(rule__IfExpression__ElseAssignment_6)
	{ after(grammarAccess.getIfExpressionAccess().getElseAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallExpression__Group__0__Impl
	rule__FunctionCallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getFunctionCallExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallExpression__Group__1__Impl
	rule__FunctionCallExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallExpressionAccess().getFunctionAssignment_1()); }
	(rule__FunctionCallExpression__FunctionAssignment_1)
	{ after(grammarAccess.getFunctionCallExpressionAccess().getFunctionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallExpression__Group__2__Impl
	rule__FunctionCallExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallExpressionAccess().getArgsAssignment_2()); }
	(rule__FunctionCallExpression__ArgsAssignment_2)*
	{ after(grammarAccess.getFunctionCallExpressionAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallExpressionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionCallExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListInt__Group__0__Impl
	rule__ListInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListIntAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getListIntAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListInt__Group__1__Impl
	rule__ListInt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListIntAccess().getListKeyword_1()); }
	'list'
	{ after(grammarAccess.getListIntAccess().getListKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListInt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListInt__Group__2__Impl
	rule__ListInt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListInt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getListIntAccess().getSAssignment_2()); }
		(rule__ListInt__SAssignment_2)
		{ after(grammarAccess.getListIntAccess().getSAssignment_2()); }
	)
	(
		{ before(grammarAccess.getListIntAccess().getSAssignment_2()); }
		(rule__ListInt__SAssignment_2)*
		{ after(grammarAccess.getListIntAccess().getSAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListInt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListInt__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListInt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListIntAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getListIntAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListDouble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDouble__Group__0__Impl
	rule__ListDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDouble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDoubleAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getListDoubleAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDouble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDouble__Group__1__Impl
	rule__ListDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDouble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDoubleAccess().getListKeyword_1()); }
	'list'
	{ after(grammarAccess.getListDoubleAccess().getListKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDouble__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDouble__Group__2__Impl
	rule__ListDouble__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDouble__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getListDoubleAccess().getTAssignment_2()); }
		(rule__ListDouble__TAssignment_2)
		{ after(grammarAccess.getListDoubleAccess().getTAssignment_2()); }
	)
	(
		{ before(grammarAccess.getListDoubleAccess().getTAssignment_2()); }
		(rule__ListDouble__TAssignment_2)*
		{ after(grammarAccess.getListDoubleAccess().getTAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDouble__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDouble__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDouble__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDoubleAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getListDoubleAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListString__Group__0__Impl
	rule__ListString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListStringAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getListStringAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListString__Group__1__Impl
	rule__ListString__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListStringAccess().getListKeyword_1()); }
	'list'
	{ after(grammarAccess.getListStringAccess().getListKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListString__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListString__Group__2__Impl
	rule__ListString__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListString__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListStringAccess().getTAssignment_2()); }
	(rule__ListString__TAssignment_2)
	{ after(grammarAccess.getListStringAccess().getTAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListString__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListString__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListString__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListStringAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getListStringAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LengthList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LengthList__Group__0__Impl
	rule__LengthList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthListAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getLengthListAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LengthList__Group__1__Impl
	rule__LengthList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthListAccess().getLengthKeyword_1()); }
	'length'
	{ after(grammarAccess.getLengthListAccess().getLengthKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LengthList__Group__2__Impl
	rule__LengthList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthListAccess().getListIntParserRuleCall_2()); }
	ruleListInt
	{ after(grammarAccess.getLengthListAccess().getListIntParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LengthList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthListAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getLengthListAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListTail__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTail__Group__0__Impl
	rule__ListTail__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTail__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTailAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getListTailAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTail__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTail__Group__1__Impl
	rule__ListTail__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTail__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTailAccess().getListTailKeyword_1()); }
	'list-tail'
	{ after(grammarAccess.getListTailAccess().getListTailKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTail__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTail__Group__2__Impl
	rule__ListTail__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTail__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTailAccess().getListIntParserRuleCall_2()); }
	ruleListInt
	{ after(grammarAccess.getListTailAccess().getListIntParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTail__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTail__Group__3__Impl
	rule__ListTail__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTail__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTailAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getListTailAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTail__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTail__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTail__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTailAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getListTailAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__0__Impl
	rule__WhileLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__1__Impl
	rule__WhileLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getWhileKeyword_1()); }
	'while'
	{ after(grammarAccess.getWhileLoopAccess().getWhileKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__2__Impl
	rule__WhileLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getNotKeyword_2()); }
	('not')?
	{ after(grammarAccess.getWhileLoopAccess().getNotKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__3__Impl
	rule__WhileLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__4__Impl
	rule__WhileLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getFunctionAssignment_4()); }
	(rule__WhileLoop__FunctionAssignment_4)
	{ after(grammarAccess.getWhileLoopAccess().getFunctionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__5__Impl
	rule__WhileLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getArgsAssignment_5()); }
	(rule__WhileLoop__ArgsAssignment_5)
	{ after(grammarAccess.getWhileLoopAccess().getArgsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__6__Impl
	rule__WhileLoop__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__7__Impl
	rule__WhileLoop__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getFunctionAssignment_7()); }
	(rule__WhileLoop__FunctionAssignment_7)
	{ after(grammarAccess.getWhileLoopAccess().getFunctionAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__8__Impl
	rule__WhileLoop__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getArgsAssignment_8()); }
	(rule__WhileLoop__ArgsAssignment_8)*
	{ after(grammarAccess.getWhileLoopAccess().getArgsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MyRacketProgram__DefinesAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMyRacketProgramAccess().getDefinesDefineParserRuleCall_0_2_0()); }
		ruleDefine
		{ after(grammarAccess.getMyRacketProgramAccess().getDefinesDefineParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyRacketProgram__ExecutionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMyRacketProgramAccess().getExecutionsExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getMyRacketProgramAccess().getExecutionsExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefineAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getDefineAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__ParamsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefineAccess().getParamsIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getDefineAccess().getParamsIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefineAccess().getBodyExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getDefineAccess().getBodyExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__ValueAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrintExpressionAccess().getValueINTTerminalRuleCall_0_2_0()); }
		RULE_INT
		{ after(grammarAccess.getPrintExpressionAccess().getValueINTTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntExpressionAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntExpressionAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleExpression__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoubleExpressionAccess().getValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getDoubleExpressionAccess().getValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringExpressionAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringExpressionAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExpression__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithExpressionAccess().getOpAlternatives_1_0()); }
		(rule__ArithExpression__OpAlternatives_1_0)
		{ after(grammarAccess.getArithExpressionAccess().getOpAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExpression__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithExpressionAccess().getArgsExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getArithExpressionAccess().getArgsExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExpression__ArgsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithExpressionAccess().getArgsExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getArithExpressionAccess().getArgsExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__CondAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getCondExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getIfExpressionAccess().getCondExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ThenAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getThenExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getIfExpressionAccess().getThenExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getElseExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getIfExpressionAccess().getElseExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__FunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallExpressionAccess().getFunctionDefineCrossReference_1_0()); }
		(
			{ before(grammarAccess.getFunctionCallExpressionAccess().getFunctionDefineIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFunctionCallExpressionAccess().getFunctionDefineIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getFunctionCallExpressionAccess().getFunctionDefineCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallExpressionAccess().getArgsExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallExpressionAccess().getArgsExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListInt__SAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListIntAccess().getSIntExpressionParserRuleCall_2_0()); }
		ruleIntExpression
		{ after(grammarAccess.getListIntAccess().getSIntExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDouble__TAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListDoubleAccess().getTDoubleExpressionParserRuleCall_2_0()); }
		ruleDoubleExpression
		{ after(grammarAccess.getListDoubleAccess().getTDoubleExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListString__TAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListStringAccess().getTStringExpressionParserRuleCall_2_0()); }
		ruleStringExpression
		{ after(grammarAccess.getListStringAccess().getTStringExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__FunctionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getFunctionDefineCrossReference_4_0()); }
		(
			{ before(grammarAccess.getWhileLoopAccess().getFunctionDefineIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getWhileLoopAccess().getFunctionDefineIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getWhileLoopAccess().getFunctionDefineCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__ArgsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getArgsExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileLoopAccess().getArgsExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__FunctionAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getFunctionDefineCrossReference_7_0()); }
		(
			{ before(grammarAccess.getWhileLoopAccess().getFunctionDefineIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getWhileLoopAccess().getFunctionDefineIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getWhileLoopAccess().getFunctionDefineCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__ArgsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getArgsExpressionParserRuleCall_8_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileLoopAccess().getArgsExpressionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
