/*
 * generated by Xtext 2.21.0
 */
package edu.upb.lp.isc.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class PerronixGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))
		val PerronixGenerator p = resource.contents.get(0) as PerronixGenerator
		fsa.generateFile('Main.scala', generate(p))
	}
	
	def generate(PerronixGenerator p) 
	'''
	object Main {
	  def main(args: Array[String]): Unit = {
	    
	  }
	}
	'''
}